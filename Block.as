package{	import flash.display.MovieClip;	import flash.events.*;	import flash.display.*;	import flash.events.*;	import flash.geom.*;		public class Block extends MovieClip	{		private var _root:MovieClip;		private var pathBlock:Boolean;		private var blockType:String;				public function Block(b:Boolean,xCoord:int,yCoord:int,typeBlock:String)		{			pathBlock = b;						if (pathBlock)			{				blockType = typeBlock;				this.addEventListener(Event.ADDED, beginClass);				this.addEventListener(Event.ENTER_FRAME, eFrame);								this.x = xCoord;				this.y = yCoord;			}			else			{				this.addEventListener(Event.ADDED, beginClass);				this.addEventListener(Event.ENTER_FRAME, eFrameEvents);			}		}				private function beginClass(e:Event):void		{			_root = MovieClip(root);						if (!pathBlock)			{				this.buttonMode = true;				this.addEventListener(MouseEvent.MOUSE_OVER, thisMouseOver);				this.addEventListener(MouseEvent.MOUSE_OUT, thisMouseOut);				this.addEventListener(MouseEvent.CLICK, thisClick);			}			else			{				this.graphics.beginFill(0x111111);				this.graphics.drawRect(0,0,25,25);				this.graphics.endFill();								if(blockType == 'START')				{					if(this.x == 0)					{						_root.startDir = 'RIGHT';						_root.startCoord = this.y;					} 					else if (this.y == 0)					{						_root.startDir = 'DOWN';						_root.startCoord = this.x;					} 					else if (this.x == 525)					{						_root.startDir = 'LEFT';						_root.startCoord = this.y;					} 					else if (this.y == 275)					{						_root.startDir = 'UP';						_root.startCoord = this.x;					} 					else 					{										}				} 				else if (blockType == 'FINISH')				{					if(this.x == 0)					{						_root.finDir = 'LEFT';					} 					else if (this.y == 0)					{						_root.finDir = 'UP';					} 					else if (this.x == 525)					{						_root.finDir = 'RIGHT';					} 					else if (this.y == 275)					{						_root.finDir = 'DOWN';					} else 					{										}				}				}		}				private function eFrame(e:Event):void		{			if (_root.gameOver)			{				this.removeEventListener(Event.ENTER_FRAME, eFrame);				MovieClip(this.parent).removeChild(this);			}									if(blockType != 'START' && blockType != 'FINISH')			{				for(var i:int = 0;i<_root.enemyHolder.numChildren;i++)				{					var enTarget = _root.enemyHolder.getChildAt(i);										if(this.x >= enTarget.x - enTarget.width*.5 && this.x <= enTarget.x + enTarget.width*.5					&& this.y >= enTarget.y - enTarget.height*.5 && this.y <= enTarget.y + enTarget.height*.5)					{						if(blockType == 'UP')						{							enTarget.xSpeed = 0;							enTarget.ySpeed = -enTarget.maxSpeed;						} 						else if(blockType == 'RIGHT')						{							enTarget.xSpeed = enTarget.maxSpeed;							enTarget.ySpeed = 0;						} 						else if(blockType == 'DOWN')						{							enTarget.xSpeed = 0;							enTarget.ySpeed = enTarget.maxSpeed;						} 						else if(blockType == 'LEFT')						{							enTarget.xSpeed = enTarget.maxSpeed;							enTarget.ySpeed = 0;						}					}				}			}		}					private function eFrameEvents(e:Event):void		{			if (_root.gameOver)			{				this.removeEventListener(Event.ENTER_FRAME, eFrameEvents);				this.removeEventListener(MouseEvent.MOUSE_OVER, thisMouseOver);				this.removeEventListener(MouseEvent.MOUSE_OUT, thisMouseOut);				this.removeEventListener(MouseEvent.CLICK, thisClick);				MovieClip(this.parent).removeChild(this);			}		}				private function thisMouseOver(e:MouseEvent):void		{			this.graphics.drawRect(0,0,25,25);			this.graphics.endFill();		}				private function thisMouseOut(e:MouseEvent):void		{			this.graphics.beginFill(0x330000);			this.graphics.drawRect(0,0,25,25);			this.graphics.endFill();		}				private function thisClick(e:MouseEvent):void		{			if (!pathBlock && _root.money >= 20)			{				_root.makeTurret(this.x,this.y);								this.buttonMode = false;				this.graphics.beginFill(0x330000);				this.graphics.drawRect(0,0,25,25);				this.graphics.endFill();								this.removeEventListener(MouseEvent.MOUSE_OVER, thisMouseOver);				this.removeEventListener(MouseEvent.MOUSE_OUT, thisMouseOut);				this.removeEventListener(MouseEvent.CLICK, thisClick);		 				_root.money -= 20;			}		}	}}